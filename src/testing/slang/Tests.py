

tests = {
    "array1"                 : {"path": "src/testing/slang/programs/array1.s", "result": 1},
    "array2"                 : {"path": "src/testing/slang/programs/array2.s", "result": 1},
    "array3"                 : {"path": "src/testing/slang/programs/array3.s", "result": 1},
    "array_struct"           : {"path": "src/testing/slang/programs/array_struct.s", "result": 1},
    "auto"                   : {"path": "src/testing/slang/programs/auto.s", "result": 10},
    "auto_array"             : {"path": "src/testing/slang/programs/auto_array.s", "result": 3},
    "auto_array_struct"      : {"path": "src/testing/slang/programs/auto_array_struct.s","result": 1},
    "auto_func"              : {"path": "src/testing/slang/programs/auto_func.s", "result": 11},
    "auto_global"            : {"path": "src/testing/slang/programs/auto_global.s", "result": 1},
    "auto_nested_struct"     : {"path": "src/testing/slang/programs/auto_nested_struct.s","result": 2},
    "auto_struct"            : {"path": "src/testing/slang/programs/auto_struct.s", "result": 1},
    "cast1"                  : {"path": "src/testing/slang/programs/cast1.s", "result": 1.0},
    "comment"                : {"path": "src/testing/slang/programs/comment.s", "result": 0},
    "division"               : {"path": "src/testing/slang/programs/division.s", "result": 10},
    "dot_cast"               : {"path": "src/testing/slang/programs/dot_cast.s", "result": 10},
    "double_import_function" : {"path": "src/testing/slang/programs/double_import_function.s","result": 3},
    "equality1"              : {"path": "src/testing/slang/programs/equality1.s", "result": 1},
    "equality2"              : {"path": "src/testing/slang/programs/equality2.s", "result": 0},
    "expr_with_assign"       : {"path": "src/testing/slang/programs/expr_with_assign.s","result": 12},
    "expression1"            : {"path": "src/testing/slang/programs/expression1.s", "result": -90},
    "expression1F"           : {"path": "src/testing/slang/programs/expression1F.s","result": -90.0},
    "expression2"            : {"path": "src/testing/slang/programs/expression2.s", "result": 0},
    "expression2F"           : {"path": "src/testing/slang/programs/expression2F.s", "result": 0},
    "expression3"            : {"path": "src/testing/slang/programs/expression3.s", "result": 50},
    "expression3F"           : {"path": "src/testing/slang/programs/expression3F.s", "result": 50.0},
    "expression4"            : {"path": "src/testing/slang/programs/expression4.s", "result": 1},
    "expression_gte1"        : {"path": "src/testing/slang/programs/expression_gte1.s","result": 1},
    "expression_gte2"        : {"path": "src/testing/slang/programs/expression_gte2.s","result": 1},
    "expression_leq1"        : {"path": "src/testing/slang/programs/expression_leq1.s","result": 1},
    "expression_leq2"        : {"path": "src/testing/slang/programs/expression_leq2.s","result": 0},
    "expression_lss1"        : {"path": "src/testing/slang/programs/expression_lss1.s","result": 0},
    "expression_lss2"        : {"path": "src/testing/slang/programs/expression_lss2.s","result": 0},
    "extern1"                : {"path": "src/testing/slang/programs/extern1.s", "result": 0},
    "floatDivision"          : {"path": "src/testing/slang/programs/floatDivision.s", "result": 10.0},
    "floatEquality1"         : {"path": "src/testing/slang/programs/floatEquality1.s", "result": 1},
    "floatEquality2"         : {"path": "src/testing/slang/programs/floatEquality2.s", "result": 0},
    "floatModulo"            : {"path": "src/testing/slang/programs/floatModulo.s", "result": 2.0},
    "floatMultiplication"    : {"path": "src/testing/slang/programs/floatMultiplication.s", "result": 100.0},
    "floatNegation"          : {"path": "src/testing/slang/programs/floatNegation.s", "result": -10.0},
    "floatNequality1"        : {"path": "src/testing/slang/programs/floatNequality1.s", "result": 0},
    "floatNequality2"        : {"path": "src/testing/slang/programs/floatNequality2.s", "result": 1},
    "ftype1"                 : {"path": "src/testing/slang/programs/ftype1.s", "result": 1},
    "func_assign"            : {"path": "src/testing/slang/programs/func_assign.s", "result": 10},
    "globalValue"            : {"path": "src/testing/slang/programs/globalValue.s", "result": 1},
    "ifthen1"                : {"path": "src/testing/slang/programs/ifthen1.s", "result": 1},
    "ifthen2"                : {"path": "src/testing/slang/programs/ifthen2.s", "result": 0},
    "ifthen3"                : {"path": "src/testing/slang/programs/ifthen3.s", "result": 2},
    "ifthen4"                : {"path": "src/testing/slang/programs/ifthen4.s", "result": 1},
    "ifthen5"                : {"path": "src/testing/slang/programs/ifthen5.s", "result": 0},
    "ifthen6"                : {"path": "src/testing/slang/programs/ifthen6.s", "result": 2},
    "ifthen62"               : {"path": "src/testing/slang/programs/ifthen62.s", "result": 10},
    "ifthen7"                : {"path": "src/testing/slang/programs/ifthen7.s", "result": 10},
    "ifthen8"                : {"path": "src/testing/slang/programs/ifthen8.s", "result": 5},
    "import1"                : {"path": "src/testing/slang/programs/import1.s", "result": 1},
    "import2"                : {"path": "src/testing/slang/programs/import2.s", "result": 4},
    "import3"                : {"path": "src/testing/slang/programs/import3.s", "result": 11},
    "import_struct1"         : {"path": "src/testing/slang/programs/import_struct1.s", "result": 0},
    "import_struct2"         : {"path": "src/testing/slang/programs/import_struct2.s", "result": 1},
    "increment"              : {"path": "src/testing/slang/programs/increment.s", "result": 11},
    "modulo"                 : {"path": "src/testing/slang/programs/modulo.s", "result": 2},
    "multiplication"         : {"path": "src/testing/slang/programs/multiplication.s", "result": 100},
    "mutableVars"            : {"path": "src/testing/slang/programs/mutableVars.s", "result": 11},
    "negation"               : {"path": "src/testing/slang/programs/negation.s", "result": -10},
    "nequality1"             : {"path": "src/testing/slang/programs/nequality1.s", "result": 0},
    "nequality2"             : {"path": "src/testing/slang/programs/nequality2.s", "result": 1},
    "nested_struct"          : {"path": "src/testing/slang/programs/nested_struct.s", "result": 1},
    "pass_by_ref"            : {"path": "src/testing/slang/programs/pass_by_ref.s", "result": 1},
    "pass_by_value"          : {"path": "src/testing/slang/programs/pass_by_value.s", "result": 0},
    "pointer1"               : {"path": "src/testing/slang/programs/pointer1.s", "result": 1},
    "pointer2"               : {"path": "src/testing/slang/programs/pointer2.s", "result": 1},
    "printf1"                : {"path": "src/testing/slang/programs/printf1.s", "result": 0},
    "printf2"                : {"path": "src/testing/slang/programs/printf2.s", "result": 0},
    "reassign"               : {"path": "src/testing/slang/programs/reassign.s", "result": 2},
    "recursive"              : {"path": "src/testing/slang/programs/recursive.s", "result": 144},
    "return_assign"          : {"path": "src/testing/slang/programs/return_assign.s", "result": 2},
    "sizeof"                 : {"path": "src/testing/slang/programs/sizeof.s", "result": 8},
    "sizeof_struct"          : {"path": "src/testing/slang/programs/sizeof_struct.s", "result": 24},
    "struct"                 : {"path": "src/testing/slang/programs/struct.s", "result": 1},
    "struct_class"           : {"path": "src/testing/slang/programs/struct_class.s", "result": 4},
    "struct_class2"          : {"path": "src/testing/slang/programs/struct_class2.s", "result": 3},
    "struct_class3"          : {"path": "src/testing/slang/programs/struct_class3.s", "result": 3},
    "struct_default_value1"  : {"path": "src/testing/slang/programs/struct_default_value1.s", "result": 1},
    "struct_default_value2"  : {"path": "src/testing/slang/programs/struct_default_value2.s", "result": 1},
    "struct_default_value3"  : {"path": "src/testing/slang/programs/struct_default_value3.s","result": 1},
    "struct_default_value4"  : {"path": "src/testing/slang/programs/struct_default_value4.s",  "result": 1},
    "struct_func"            : {"path": "src/testing/slang/programs/struct_func.s", "result": 0},
    "subfloat"               : {"path": "src/testing/slang/programs/subfloat.s", "result": -0.5},
    "variable_declaration2"  : {"path": "src/testing/slang/programs/variable_declaration2.s", "result": 1},
    "voidfunc"               : {"path": "src/testing/slang/programs/voidfunc.s", "result": 1},
    "while1"                 : {"path": "src/testing/slang/programs/while1.s", "result": 10},
    "while2"                 : {"path": "src/testing/slang/programs/while2.s", "result": 10},
    "while3"                 : {"path": "src/testing/slang/programs/while3.s", "result": 0},
    "bubblesort"             : {"path": "src/testing/slang/programs/bubblesort.s", "result": 1},
    "mmul"                   : {"path": "src/testing/slang/programs/mmul.s", "result": 1},
    "dfs"                    : {"path": "src/testing/slang/programs/dfs.s", "result": 1},
    "malloc_struct"          : {"path": "src/testing/slang/programs/malloc_struct.s", "result": 1},
}

